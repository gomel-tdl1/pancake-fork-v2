{"version":3,"sources":["views/Home/components/MainframeSection/Card.tsx","views/Home/components/MainframeSection/MainframeHome.tsx","views/Home/index.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx"],"names":["MainWrapper","styled","div","theme","mediaQueries","nav","TitleDescriptionSection","ButtonHome","NavLink","CardMainframe","title","description","info","buttonText","href","className","to","ImageSection","CardsSection","cardsData","MainframeSection","src","MainframeTokenIcon","alt","map","card","Card","Container","lg","Home","useTheme","useWeb3React","account","PageSection","innerProps","style","margin","width","minHeight","index","background","BGLogo","hasCurvedDivider","sharedStyles","clipPath","clipFill","css","isDark","dark","light","colors","ConcaveContainer","Box","ConvexContainer","ConvexTop","height","id","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","Wrapper","dividerFill","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","Flex","getPadding","ChildrenWrapper","sm","children","svgFill","concaveDivider","containerProps","props"],"mappings":"oPAIMA,EAAcC,IAAOC,IAAV,mLAKb,qBAAEC,MAAiBC,aAAaC,OAQ9BC,EAA0BL,IAAOC,IAAV,inBAKzB,qBAAEC,MAAiBC,aAAaC,OAShC,qBAAEF,MAAiBC,aAAaC,OAkB9BE,EAAaN,YAAOO,IAAPP,CAAH,gWAyCDQ,EApB4B,SAAC,GAMO,IALHC,EAKE,EALFA,MACAC,EAIE,EAJFA,YACAC,EAGE,EAHFA,KACAC,EAEE,EAFFA,WACAC,EACE,EADFA,KAG5C,OACI,eAACd,EAAD,WACI,eAACM,EAAD,WACI,qBAAKS,UAAU,QAAf,SAAwBL,IACxB,qBAAKK,UAAU,OAAf,SAAuBJ,OAE3B,qBAAKI,UAAU,OAAf,SAAuBH,IACvB,cAACL,EAAD,CAAYS,GAAIF,EAAhB,SAAuBD,QC/E7Bb,EAAcC,IAAOC,IAAV,oIAOXe,EAAehB,IAAOC,IAAV,8TAgBZgB,EAAejB,IAAOC,IAAV,yNAOd,qBAAEC,MAAiBC,aAAaC,OAK9Bc,EAAY,CAChB,CACET,MAAO,YACPC,YAAa,kCACbC,KAAM,mBACNC,WAAY,OACZC,KAAM,SAER,CACEJ,MAAO,cACPC,YAAa,iDACbC,KAAM,qBACNC,WAAY,QACZC,KAAM,UAER,CACEJ,MAAO,aACPC,YAAa,2CACbC,KAAM,uBACNC,WAAY,QACZC,KAAM,WAqBKM,EAjBoB,WAEjC,OACE,eAAC,EAAD,WACE,eAACH,EAAD,WACE,8BACE,qBAAKI,IAAKC,IAAoBC,IAAI,OAEpC,sDAEF,cAACL,EAAD,UACGC,EAAUK,KAAI,SAAAC,GAAI,OAAI,cAACC,EAAD,eAAmBD,aCnExBxB,YAAO0B,IAAP1B,CAAH,+PAUnB,qBAAGE,MAAkBC,aAAawB,MAwBvBC,UAlBQ,WACHC,cAAV3B,MACY4B,cAAZC,QAER,OACE,mCACE,cAACC,EAAA,EAAD,CACEC,WAAY,CAAEC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,UAAW,UAC9DC,MAAO,EACPC,WAAU,cAASC,IAAT,kBACVC,kBAAkB,EAJpB,SAME,cAAC,EAAD,U,8GCxBFC,EAAe,SAACxC,EAAqByC,EAAkBC,GAAxC,OAAgEC,YAA/D,IAAD,6IAGFF,GAEH,WACZ,OAAIzC,EAAM4C,QACO,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUG,QAAV,OAAkBH,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUI,QAAS9C,EAAM+C,OAAOV,YAE5C,OAARK,QAAQ,IAARA,OAAA,EAAAA,EAAUI,QAAS9C,EAAM+C,OAAOV,eAQrCW,EAAmBlD,YAAOmD,IAAPnD,CAAH,sDAClB,gBAAGE,EAAH,EAAGA,MAAOyC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,SAApB,OAAmCF,EAAaxC,EAAOyC,EAAUC,MACtD,kBAAgC,wBAAhC,EAAGD,SAAqD,sBAAwB,uBAGzFS,EAAkBpD,YAAOmD,IAAPnD,CAAH,sDACjB,gBAAGE,EAAH,EAAGA,MAAOyC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,SAApB,OAAmCF,EAAaxC,EAAOyC,EAAUC,MACtD,kBAAgC,uBAAhC,EAAGD,SAAoD,sBAAwB,wBAGjFU,EAAkC,SAAC,GAAD,IAAGT,EAAH,EAAGA,SAAH,OAC7C,cAACQ,EAAD,CAAiBR,SAAUA,EAAUD,SAAS,kBAA9C,SACE,qBAAKP,MAAM,IAAIkB,OAAO,IAAtB,SACE,+BACE,0BAAUC,GAAG,iBAAiBC,cAAc,oBAA5C,SACE,sBAAMC,EAAE,4DAOLC,EAAqC,SAAC,GAAD,IAAGd,EAAH,EAAGA,SAAH,OAChD,cAACQ,EAAD,CAAiBR,SAAUA,EAAUD,SAAS,qBAA9C,SACE,qBAAKP,MAAM,IAAIkB,OAAO,IAAtB,SACE,+BACE,0BAAUC,GAAG,oBAAoBC,cAAc,oBAA/C,SACE,sBAAMC,EAAE,2DAOLE,EAAmC,SAAC,GAAD,IAAGf,EAAH,EAAGA,SAAH,OAC9C,cAACM,EAAD,CAAkBN,SAAUA,EAAUD,SAAS,mBAA/C,SACE,qBAAKP,MAAM,IAAIkB,OAAO,IAAtB,SACE,+BACE,0BAAUC,GAAG,kBAAkBC,cAAc,oBAA7C,SACE,sBAAMC,EAAE,2DAOLG,EAAsC,SAAC,GAAD,IAAGhB,EAAH,EAAGA,SAAH,OACjD,cAACM,EAAD,CAAkBN,SAAUA,EAAUD,SAAS,sBAA/C,SACE,qBAAKP,MAAM,IAAIkB,OAAO,IAAtB,SACE,+BACE,0BAAUC,GAAG,qBAAqBC,cAAc,oBAAhD,SACE,sBAAMC,EAAE,+DChEZI,EAAU7D,IAAOC,IAAV,kJACG,YAA6B,IAA1BC,EAAyB,EAAzBA,MAAO4D,EAAkB,EAAlBA,YACtB,OAAI5D,EAAM4C,QACU,OAAXgB,QAAW,IAAXA,OAAA,EAAAA,EAAaf,QAAb,OAAqBe,QAArB,IAAqBA,OAArB,EAAqBA,EAAad,QAAS,QAElC,OAAXc,QAAW,IAAXA,OAAA,EAAAA,EAAad,SAAb,OAAsBc,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAaf,OAAQ,UAEzC,qBAAGT,SAOVyB,EAAmB/D,IAAOC,IAAV,oIACT,qBAAGqC,MAAoB,KA+CrB0B,EAxCqC,SAAC,GAO9C,IANL1B,EAMI,EANJA,MACA2B,EAKI,EALJA,gBACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,QACAvB,EAEI,EAFJA,SACAkB,EACI,EADJA,YAEMM,EAAoC,QAApBH,IAA8BE,EAC9CE,EAAuC,WAApBJ,IAAiCE,EACpDG,EAAqC,QAApBL,GAA6BE,EAC9CI,EAAwC,WAApBN,GAAgCE,EAoB1D,OACE,eAACN,EAAD,CAASvB,MAAOA,EAAOwB,YAAaA,EAApC,UACGI,GAAoB,cAACH,EAAD,CAAkBzB,MAAOA,EAAzB,SAAiC4B,IAlBtD,qCACGI,GAAkB,cAAC,EAAD,CAAY1B,SAAUA,IACxC2B,GAAqB,cAAC,EAAD,CAAe3B,SAAUA,OAOjD,qCACGwB,GAAiB,cAAC,EAAD,CAAWxB,SAAUA,IACtCyB,GAAoB,cAAC,EAAD,CAAczB,SAAUA,W,8KCxC/C4B,EAAkBxE,YAAOyE,IAAPzE,CAAH,4JAIR,qBAAGsC,MAAoB,KACpB,gBAAGC,EAAH,EAAGA,WAAYrC,EAAf,EAAeA,MAAf,OAA2BqC,GAAcrC,EAAM+C,OAAOV,cACzD,mBAAoBmC,EAApB,EAAGA,iBAGVC,EAAkB3E,YAAO0B,IAAP1B,CAAH,sOAKjB,qBAAGE,MAAkBC,aAAayE,MAKlC,qBAAG1E,MAAkBC,aAAawB,MAsEvBK,IAhEiC,SAAC,GAc1C,IAbL6C,EAaI,EAbJA,SACAtC,EAYI,EAZJA,WACAuC,EAWI,EAXJA,QAWI,IAVJxC,aAUI,MAVI,EAUJ,EATJ4B,EASI,EATJA,iBASI,IARJD,uBAQI,MARc,SAQd,MAPJxB,wBAOI,aANJsC,sBAMI,SALJnC,EAKI,EALJA,SACAkB,EAII,EAJJA,YACAkB,EAGI,EAHJA,eACA/C,EAEI,EAFJA,WACGgD,EACC,iBAmBJ,OACE,eAAC,IAAD,2BAASD,GAAT,cACGvC,GAAwC,QAApBwB,GACnB,cAAC,EAAD,CACEa,QAASA,EACTxC,MAAOA,EACP6B,QAASY,EACTd,gBAAiBA,EACjBC,iBAAkBA,EAClBtB,SAAUA,EACVkB,YAAaA,IAGjB,cAACU,EAAD,yBAAiBjC,WAAYA,EAAYD,MAAOA,EAAOoC,WA/BxC,WAEjB,OAAKjC,EAKmB,WAApBwB,EACK,cAIe,QAApBA,EACK,cAEF,SAZE,WA4B4EgB,GAAnF,aACE,cAACN,EAAD,2BAAqB1C,GAArB,aAAkC4C,QAEnCpC,GAAwC,WAApBwB,GACnB,cAAC,EAAD,CACEa,QAASA,EACTxC,MAAOA,EACP6B,QAASY,EACTd,gBAAiBA,EACjBC,iBAAkBA,EAClBtB,SAAUA,EACVkB,YAAaA","file":"static/js/21.eeca9dde.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst MainWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 320px;\r\n  ${({theme}) => theme.mediaQueries.nav}{\r\n    width: 32%;\r\n  }\r\n  gap: 30px;\r\n  .info{\r\n    \r\n  }\r\n`\r\nconst TitleDescriptionSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 40px 20px;\r\n  ${({theme}) => theme.mediaQueries.nav}{\r\n    padding: 50px 20px;\r\n    padding-bottom: 0;\r\n  }\r\n  border-radius: 10px;\r\n  background-color: rgba(8, 6, 11, 0.5);\r\n  gap: 8px;\r\n  text-align: center;\r\n  width: 100%;\r\n  ${({theme}) => theme.mediaQueries.nav}{\r\n    min-height: 160px;\r\n  }\r\n  color: #98FBF6;\r\n  font-weight: 400;\r\n  .title{\r\n    font-family: 'Roboto', sans-serif;\r\n    font-size: 34px;\r\n    word-spacing: 5px;\r\n    letter-spacing: 2px;\r\n  }\r\n  .desc{\r\n    font-family: 'Roboto', sans-serif;\r\n    font-size: 14px;\r\n    width: 200px;\r\n    word-spacing: 2px;\r\n  }\r\n`\r\nconst ButtonHome = styled(NavLink)`\r\n  width: 250px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 6px 0;\r\n  border-radius: 20px;\r\n  border: 2px solid #33D488;\r\n  box-shadow: 0 0 10px 10px rgba(51, 212, 136, 0.25), inset 0 0 10px 10px rgba(51, 212, 136, 0.25);\r\n  color: #98FBF6;\r\n  font-size: 14px;\r\n  letter-spacing: 1px;\r\n`\r\n\r\ntype PropsType = {\r\n    title: string,\r\n    description: string,\r\n    info: string,\r\n    buttonText: string,\r\n    href: string\r\n}\r\nconst CardMainframe: React.FC<PropsType> = ({\r\n                                                title,\r\n                                                description,\r\n                                                info,\r\n                                                buttonText,\r\n                                                href,\r\n                                            }) => {\r\n\r\n    return (\r\n        <MainWrapper>\r\n            <TitleDescriptionSection>\r\n                <div className='title'>{title}</div>\r\n                <div className='desc'>{description}</div>\r\n            </TitleDescriptionSection>\r\n            <div className='info'>{info}</div>\r\n            <ButtonHome to={href}>{buttonText}</ButtonHome>\r\n        </MainWrapper>\r\n    )\r\n}\r\n\r\nexport default CardMainframe\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport MainframeTokenIcon from '../../../../assets/mainframe/zbdo_logo_token.svg'\r\nimport CardMainframe from './Card'\r\nimport StakeModal from '../../../Pools/components/PoolCard/Modals/StakeModal'\r\n\r\nconst MainWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: aliceblue;\r\n  gap: 50px;\r\n`\r\nconst ImageSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n  text-align: center;\r\n  img{\r\n    width: 150px;\r\n  }\r\n  h2{\r\n    font-size: 50px;\r\n    font-family: 'Conv_EarthsMightiestExpandItal-nqLO';\r\n    letter-spacing: 2px;\r\n    text-shadow: 1px 1px #98FBF6;\r\n  }\r\n`\r\nconst CardsSection = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  gap: 20px;\r\n  flex-direction: column;\r\n  ${({theme}) => theme.mediaQueries.nav}{\r\n    flex-direction: row;\r\n    gap: 10px;\r\n  }\r\n`\r\nconst cardsData = [\r\n  {\r\n    title: '1000% APY',\r\n    description: '+ 2x Airdrop Until Oct 31, 2021',\r\n    info: '1. Swap to $ZBDO',\r\n    buttonText: 'Swap',\r\n    href: '/swap'\r\n  },\r\n  {\r\n    title: 'Master Node',\r\n    description: 'Bot Generator (Smart NFT), ZBD Fueling Station',\r\n    info: '2. Stake Mainframe',\r\n    buttonText: 'Stake',\r\n    href: '/pools'\r\n  },\r\n  {\r\n    title: 'Governance',\r\n    description: 'Vote on platform updates, change & rules',\r\n    info: '3. Claim ZBD Rewards',\r\n    buttonText: 'Claim',\r\n    href: '/pools'\r\n  }\r\n]\r\n\r\nconst MainframeSection: React.FC = () => {\r\n\r\n  return (\r\n    <MainWrapper>\r\n      <ImageSection>\r\n        <div>\r\n          <img src={MainframeTokenIcon} alt='' />\r\n        </div>\r\n        <h2>Mainframe Staking</h2>\r\n      </ImageSection>\r\n      <CardsSection>\r\n        {cardsData.map(card => <CardMainframe {...card}/>)}\r\n      </CardsSection>\r\n    </MainWrapper>\r\n  )\r\n}\r\n\r\nexport default MainframeSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PageSection from 'components/PageSection'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport Container from 'components/Layout/Container'\r\nimport BGLogo from '../../assets/mainframe/Zbdo_Mainframe_Staking.png'\r\nimport MainframeSection from './components/MainframeSection/MainframeHome'\r\n\r\nconst UserBannerWrapper = styled(Container)`\r\n  z-index: 1;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  padding-left: 0px;\r\n  padding-right: 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nconst Home: React.FC = () => {\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <>\r\n      <PageSection\r\n        innerProps={{ style: { margin: '0', width: '100%', minHeight: '780px' } }}\r\n        index={2}\r\n        background={`url(${BGLogo}) fixed center`}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <MainframeSection />\r\n      </PageSection>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { ClipFill } from '../types'\r\n\r\ninterface CurveProps {\r\n  clipFill?: ClipFill\r\n}\r\n\r\ninterface ContainerProps extends CurveProps {\r\n  clipPath: string\r\n}\r\n\r\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\r\n  width: 100%;\r\n  height: 20px;\r\n  clip-path: url(${clipPath});\r\n\r\n  background: ${() => {\r\n    if (theme.isDark) {\r\n      return clipFill?.dark || clipFill?.light || theme.colors.background\r\n    }\r\n    return clipFill?.light || theme.colors.background\r\n  }};\r\n\r\n  & svg {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ConcaveContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\r\n`\r\n\r\nconst ConvexContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\r\n`\r\n\r\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n\r\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\r\nimport { DividerFill, ClipFill } from './types'\r\n\r\ninterface CurvedDividerProps extends WrapperProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concave?: boolean\r\n  clipFill?: ClipFill\r\n}\r\ninterface WrapperProps {\r\n  index: number\r\n  dividerFill?: DividerFill\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n  background: ${({ theme, dividerFill }) => {\r\n    if (theme.isDark) {\r\n      return dividerFill?.dark || dividerFill?.light || 'none'\r\n    }\r\n    return dividerFill?.light || dividerFill?.dark || 'none'\r\n  }};\r\n  z-index: ${({ index }) => index};\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nconst ComponentWrapper = styled.div<WrapperProps>`\r\n  z-index: ${({ index }) => index + 1};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\n\r\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\r\n  index,\r\n  dividerPosition,\r\n  dividerComponent,\r\n  concave,\r\n  clipFill,\r\n  dividerFill,\r\n}) => {\r\n  const showConvexTop = dividerPosition === 'top' && !concave\r\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\r\n  const showConcaveTop = dividerPosition === 'top' && concave\r\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\r\n\r\n  const getconcaveDivider = () => {\r\n    return (\r\n      <>\r\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\r\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getConvexDivider = () => {\r\n    return (\r\n      <>\r\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\r\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper index={index} dividerFill={dividerFill}>\r\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\r\n      {getconcaveDivider()}\r\n      {getConvexDivider()}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CurvedDivider\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\r\nimport Container from 'components/Layout/Container'\r\nimport CurvedDivider from './CurvedDivider'\r\nimport { ClipFill, DividerFill } from './types'\r\n\r\ninterface PageSectionProps extends BackgroundColorProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  hasCurvedDivider?: boolean\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concaveDivider?: boolean\r\n  containerProps?: BoxProps\r\n  innerProps?: BoxProps\r\n  clipFill?: ClipFill\r\n  dividerFill?: DividerFill\r\n}\r\n\r\ninterface BackgroundColorProps extends FlexProps {\r\n  index: number\r\n  background?: string\r\n  getPadding?: () => string\r\n}\r\n\r\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: ${({ index }) => index - 1};\r\n  background: ${({ background, theme }) => background || theme.colors.background};\r\n  padding: ${({ getPadding }) => getPadding()};\r\n`\r\n\r\nconst ChildrenWrapper = styled(Container)`\r\n  min-height: auto;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 48px;\r\n    padding-bottom: 48px;\r\n  }\r\n`\r\n\r\nconst PageSection: React.FC<PageSectionProps> = ({\r\n  children,\r\n  background,\r\n  svgFill,\r\n  index = 1,\r\n  dividerComponent,\r\n  dividerPosition = 'bottom',\r\n  hasCurvedDivider = true,\r\n  concaveDivider = false,\r\n  clipFill,\r\n  dividerFill,\r\n  containerProps,\r\n  innerProps,\r\n  ...props\r\n}) => {\r\n  const getPadding = () => {\r\n    // No curved divider\r\n    if (!hasCurvedDivider) {\r\n      return '48px 0'\r\n    }\r\n    // Bottom curved divider\r\n    // Less bottom padding, as the divider is present there\r\n    if (dividerPosition === 'bottom') {\r\n      return '48px 0 14px'\r\n    }\r\n    // Top curved divider\r\n    // Less top padding, as the divider is present there\r\n    if (dividerPosition === 'top') {\r\n      return '14px 0 48px'\r\n    }\r\n    return '48px 0'\r\n  }\r\n\r\n  return (\r\n    <Box {...containerProps}>\r\n      {hasCurvedDivider && dividerPosition === 'top' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\r\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\r\n      </BackgroundColor>\r\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PageSection\r\n"],"sourceRoot":""}